name: Release-From-Build-Update

on:
 workflow_dispatch:     
    inputs:
      solutions: 
        description: 'Space-separated list of solutions to export'
        default: 'SignatureAviationBase AnotherSolution'
      run_no:
        description: 'Build no. of the artifacts uploaded in the repository'
        required: true
 # push:
 #   branches:
 #      - users/ShifaMittal11/D365_MSFT_Copy
jobs:
 setup_matrix:
    runs-on: windows-latest
    outputs:
      solutions: ${{ steps.generate-matrix.outputs.solutions}}
    steps:
      - name: generate-matrix
        id: generate-matrix
        run: |
          solutions=$(echo '"${{ github.event.inputs.solutions }}"' | jq -c '. | split(" ") | map(select(length > 0))')
          echo "solutions=$solutions" >> $GITHUB_OUTPUT
          
 Deploy-SIT1:
    needs: setup_matrix
    runs-on: windows-latest
    strategy:
      # max-parallel: 1
      matrix:
        solution: ${{ fromJSON(needs.init.outputs.solutions)}}
    environment:
      name: SIT1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
              
      - name: Install Power Platform Tools
        uses: microsoft/powerplatform-actions/actions-install@v1
                 
      - name: Import solution - ${{ matrix.solution }}
        uses: microsoft/powerplatform-actions/import-solution@v1
        with:
          environment-url: ${{ vars. }}
          app-id: ${{ vars.QA_SPN_APP_ID }}
          client-secret: ${{ secrets.QA_SPN_SECRET }}
          tenant-id: ${{ vars.Build_Tenant_ID }}
          solution-file: "Artifacts/${{ github.event.inputs.run_no }}/${{ matrix.solution }}/Managed/${{ matrix.solution }}.zip"
          force-overwrite: true
          publish-changes: true
          run-asynchronously: true
          max-async-wait-time: 90
          skip-dependency-check: true
 
    # # Environment protection rule for SIT1 approval
    env:
      required: true

 Deploy-QA:
    needs: setup_matrix
    runs-on: windows-latest
    strategy:
      # max-parallel: 1
      matrix:
        solution: ${{ fromJSON(needs.init.outputs.solutions)}}
    environment:
      name: SIT1   

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
              
      - name: Install Power Platform Tools
        uses: microsoft/powerplatform-actions/actions-install@v1
                 
      - name: Import solution - ${{ matrix.solution }}
        uses: microsoft/powerplatform-actions/import-solution@v1
        with:
          environment-url: ${{ vars.SIT1_URL }}
          app-id: ${{ vars.QA_SPN_APP_ID }}
          client-secret: ${{ secrets.QA_SPN_SECRET }}
          tenant-id: ${{ vars.Build_Tenant_ID }}
          solution-file: "Artifacts/${{ github.event.inputs.run_no }}/${{ matrix.solution }}/Managed/${{ matrix.solution }}.zip"
          force-overwrite: true
          publish-changes: true
          run-asynchronously: true
          max-async-wait-time: 90
          skip-dependency-check: true
 
    # # Environment protection rule for SIT1 approval
    env:
      required: true

 Deploy-UAT:
    needs: [Deploy-SIT1, Deploy-QA]
    runs-on: windows-latest
    strategy:
      # max-parallel: 1
      matrix:
        solution: ${{ fromJSON(needs.init.outputs.solutions)}}
    environment:
      name: UAT   

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
              
      - name: Install Power Platform Tools
        uses: microsoft/powerplatform-actions/actions-install@v1
                 
      - name: Import solution - ${{ matrix.solution }}
        uses: microsoft/powerplatform-actions/import-solution@v1
        with:
          environment-url: ${{ vars. }}
          app-id: ${{ vars. }}
          client-secret: ${{ secrets. }}
          tenant-id: ${{ vars. }}
          solution-file: "Artifacts/${{ github.event.inputs.run_no }}/${{ matrix.solution }}/Managed/${{ matrix.solution }}.zip"
          force-overwrite: true
          publish-changes: true
          run-asynchronously: true
          max-async-wait-time: 90
          skip-dependency-check: true
 
    # # Environment protection rule for UAT approval
    env:
      required: true

 Deploy-PROD:
    needs: Deploy-UAT
    runs-on: windows-latest
    strategy:
      # max-parallel: 1
      matrix:
        solution: ${{ fromJSON(needs.init.outputs.solutions)}}
    environment:
      name: PROD   

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
              
      - name: Install Power Platform Tools
        uses: microsoft/powerplatform-actions/actions-install@v1
                 
      - name: Import solution - ${{ matrix.solution }}
        uses: microsoft/powerplatform-actions/import-solution@v1
        with:
          environment-url: ${{ vars. }}
          app-id: ${{ vars. }}
          client-secret: ${{ secrets. }}
          tenant-id: ${{ vars. }}
          solution-file: "Artifacts/${{ github.event.inputs.run_no }}/${{ matrix.solution }}/Managed/${{ matrix.solution }}.zip"
          force-overwrite: true
          publish-changes: true
          run-asynchronously: true
          max-async-wait-time: 90
          skip-dependency-check: true
 
    # # Environment protection rule for PROD approval
    env:
      required: true
