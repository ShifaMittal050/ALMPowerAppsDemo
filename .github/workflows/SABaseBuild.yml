name: caller_workflow_Build_Solution

on:
  workflow_dispatch:
    inputs:
    
      solution1:
        description: "Solution 1"
        type: choice
        required: true
        options: 
        - Yes
        - No
        
      solution_type_Solution1:
        description: "Solution 1: Managed or Unmanaged"
        required: true
        default: 'Managed'
        options: 
        - Managed
        - Unmanaged

      deployment_type_Solution1:
        description: "Solution 1: Update or Upgrade"
        type: choice
        required: true
        default: 'Update'
        options:
          - Upgrade
          - Update
        
      solution2:
        description: "solution 2"
        type: choice
        required: true
        options: 
        - Yes
        - No

      solution_type_Solution2:
        description: "Solution 2: Managed or Unmanaged"
        required: true
        default: 'Managed'
        options: 
        - Managed
        - Unmanaged

      deployment_type_Solution2:
        description: "Solution 2: Update or Upgrade"
        type: choice
        required: true
        default: 'Update'
        options:
          - Upgrade
          - Update
 
      
permissions:
  contents: write
  pull-requests: write
  
jobs:
  call-reusable_workflow_pack_solutions_to_target_env:
    # runs-on: ubuntu-latest
    # steps:
    # - uses: actions/checkout@v2
    #   with:
    #     lfs: true
        
    # - name: Check the deployment request for Solution1
      if: ${{ inputs.solution1 == 'True' }}
      uses: ./.github/workflows/Reusable_Workflow_Import_Solutions.yml
      # with:
      #  solution_names: ${{ github.event.input.solution_name }}
      #  target_env: ${{ github.event.inputs.target_env }}
      #  deployment_type: ${{ github.event.inputs.deployment_type }}
      #  #async_deployment: ${{ github.event.inputs.run_asynchronously }}
      #  async_timeout: ${{ github.event.inputs.async_timeout }}
      #  solution_type:  ${{ inputs.solution_type }}
     # secrets:
     #   target_env_url: ${{ secrets.ENVIRONMENT_URL }}
     #   client_id: ${{ secrets.APP_ID }}
     #   client_secret: ${{ secrets.SP_SECRET }}
     #   tenant_id: ${{ secrets.TENANT_ID }}
